;/*******************************************************
;This program was created by the
;CodeWizardAVR V3.12 Advanced
;Automatic Program Generator
;© Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 2024/11/03
;Author  :
;Company :
;Comments:
;
;
;Chip type               : ATmega128A
;Program type            : Application
;AVR Core Clock frequency: 8.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 1024
;*******************************************************/
;
;#include <mega128a.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;// Graphic Display functions
;#include <glcd.h>
;
;// Font used for displaying text
;// on the graphic display
;#include <font5x7.h>
;
;// Declare your global variables here
;
;void main(void)
; 0000 0024 {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0025 // Declare your local variables here
; 0000 0026 // Variable used to store graphic display
; 0000 0027 // controller initialization data
; 0000 0028 GLCDINIT_t glcd_init_data;
; 0000 0029 
; 0000 002A // Input/Output Ports initialization
; 0000 002B // Port A initialization
; 0000 002C // Function: Bit7=Out Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 002D DDRA=(1<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
;PCODE: $0000000E VOL: 0
;	glcd_init_data -> Y+0
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 002E // State: Bit7=0 Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 002F PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 0030 
; 0000 0031 // Port B initialization
; 0000 0032 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0033 DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0034 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0035 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 0036 
; 0000 0037 // Port C initialization
; 0000 0038 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0039 DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 003A // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 003B PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 003C 
; 0000 003D // Port D initialization
; 0000 003E // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 003F DDRD=(1<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0040 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0041 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0042 
; 0000 0043 // Port E initialization
; 0000 0044 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0045 DDRE=(0<<DDE7) | (0<<DDE6) | (0<<DDE5) | (0<<DDE4) | (0<<DDE3) | (0<<DDE2) | (0<<DDE1) | (0<<DDE0);
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0046 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0047 PORTE=(0<<PORTE7) | (0<<PORTE6) | (0<<PORTE5) | (0<<PORTE4) | (0<<PORTE3) | (0<<PORTE2) | (0<<PORTE1) | (0<<PORTE0);
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0048 
; 0000 0049 // Port F initialization
; 0000 004A // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 004B DDRF=(0<<DDF7) | (0<<DDF6) | (0<<DDF5) | (0<<DDF4) | (0<<DDF3) | (0<<DDF2) | (0<<DDF1) | (0<<DDF0);
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 004C // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 004D PORTF=(0<<PORTF7) | (0<<PORTF6) | (0<<PORTF5) | (0<<PORTF4) | (0<<PORTF3) | (0<<PORTF2) | (0<<PORTF1) | (0<<PORTF0);
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 004E 
; 0000 004F // Port G initialization
; 0000 0050 // Function: Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0051 DDRG=(0<<DDG4) | (0<<DDG3) | (0<<DDG2) | (0<<DDG1) | (0<<DDG0);
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0052 // State: Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0053 PORTG=(0<<PORTG4) | (0<<PORTG3) | (0<<PORTG2) | (0<<PORTG1) | (0<<PORTG0);
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0054 
; 0000 0055 // Timer/Counter 0 initialization
; 0000 0056 // Clock source: System Clock
; 0000 0057 // Clock value: Timer 0 Stopped
; 0000 0058 // Mode: Normal top=0xFF
; 0000 0059 // OC0 output: Disconnected
; 0000 005A ASSR=0<<AS0;
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 005B TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (0<<CS01) | (0<<CS00);
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 005C TCNT0=0x00;
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 005D OCR0=0x00;
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 005E 
; 0000 005F // Timer/Counter 1 initialization
; 0000 0060 // Clock source: System Clock
; 0000 0061 // Clock value: Timer1 Stopped
; 0000 0062 // Mode: Normal top=0xFFFF
; 0000 0063 // OC1A output: Disconnected
; 0000 0064 // OC1B output: Disconnected
; 0000 0065 // OC1C output: Disconnected
; 0000 0066 // Noise Canceler: Off
; 0000 0067 // Input Capture on Falling Edge
; 0000 0068 // Timer1 Overflow Interrupt: Off
; 0000 0069 // Input Capture Interrupt: Off
; 0000 006A // Compare A Match Interrupt: Off
; 0000 006B // Compare B Match Interrupt: Off
; 0000 006C // Compare C Match Interrupt: Off
; 0000 006D TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<COM1C1) | (0<<COM1C0) | (0<<WGM11) | (0<<WGM10);
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 006E TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 006F TCNT1H=0x00;
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0070 TCNT1L=0x00;
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 0071 ICR1H=0x00;
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 0072 ICR1L=0x00;
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 0073 OCR1AH=0x00;
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 0074 OCR1AL=0x00;
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0075 OCR1BH=0x00;
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0076 OCR1BL=0x00;
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 0077 OCR1CH=0x00;
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 0078 OCR1CL=0x00;
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 0079 
; 0000 007A // Timer/Counter 2 initialization
; 0000 007B // Clock source: System Clock
; 0000 007C // Clock value: Timer2 Stopped
; 0000 007D // Mode: Normal top=0xFF
; 0000 007E // OC2 output: Disconnected
; 0000 007F TCCR2=(0<<WGM20) | (0<<COM21) | (0<<COM20) | (0<<WGM21) | (0<<CS22) | (0<<CS21) | (0<<CS20);
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 0080 TCNT2=0x00;
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 0081 OCR2=0x00;
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 0082 
; 0000 0083 // Timer/Counter 3 initialization
; 0000 0084 // Clock source: System Clock
; 0000 0085 // Clock value: Timer3 Stopped
; 0000 0086 // Mode: Normal top=0xFFFF
; 0000 0087 // OC3A output: Disconnected
; 0000 0088 // OC3B output: Disconnected
; 0000 0089 // OC3C output: Disconnected
; 0000 008A // Noise Canceler: Off
; 0000 008B // Input Capture on Falling Edge
; 0000 008C // Timer3 Overflow Interrupt: Off
; 0000 008D // Input Capture Interrupt: Off
; 0000 008E // Compare A Match Interrupt: Off
; 0000 008F // Compare B Match Interrupt: Off
; 0000 0090 // Compare C Match Interrupt: Off
; 0000 0091 TCCR3A=(0<<COM3A1) | (0<<COM3A0) | (0<<COM3B1) | (0<<COM3B0) | (0<<COM3C1) | (0<<COM3C0) | (0<<WGM31) | (0<<WGM30);
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 0092 TCCR3B=(0<<ICNC3) | (0<<ICES3) | (0<<WGM33) | (0<<WGM32) | (0<<CS32) | (0<<CS31) | (0<<CS30);
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 0093 TCNT3H=0x00;
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 0094 TCNT3L=0x00;
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 0095 ICR3H=0x00;
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 0096 ICR3L=0x00;
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 0097 OCR3AH=0x00;
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0000 0098 OCR3AL=0x00;
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0000 0099 OCR3BH=0x00;
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0000 009A OCR3BL=0x00;
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0000 009B OCR3CH=0x00;
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 009C OCR3CL=0x00;
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0000 009D 
; 0000 009E // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 009F TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
; 0000 00A0 ETIMSK=(0<<TICIE3) | (0<<OCIE3A) | (0<<OCIE3B) | (0<<TOIE3) | (0<<OCIE3C) | (0<<OCIE1C);
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0000 00A1 
; 0000 00A2 // External Interrupt(s) initialization
; 0000 00A3 // INT0: Off
; 0000 00A4 // INT1: Off
; 0000 00A5 // INT2: Off
; 0000 00A6 // INT3: Off
; 0000 00A7 // INT4: Off
; 0000 00A8 // INT5: Off
; 0000 00A9 // INT6: Off
; 0000 00AA // INT7: Off
; 0000 00AB EICRA=(0<<ISC31) | (0<<ISC30) | (0<<ISC21) | (0<<ISC20) | (0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0000 00AC EICRB=(0<<ISC71) | (0<<ISC70) | (0<<ISC61) | (0<<ISC60) | (0<<ISC51) | (0<<ISC50) | (0<<ISC41) | (0<<ISC40);
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 00AD EIMSK=(0<<INT7) | (0<<INT6) | (0<<INT5) | (0<<INT4) | (0<<INT3) | (0<<INT2) | (0<<INT1) | (0<<INT0);
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 00AE 
; 0000 00AF // USART0 initialization
; 0000 00B0 // USART0 disabled
; 0000 00B1 UCSR0B=(0<<RXCIE0) | (0<<TXCIE0) | (0<<UDRIE0) | (0<<RXEN0) | (0<<TXEN0) | (0<<UCSZ02) | (0<<RXB80) | (0<<TXB80);
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0000 00B2 
; 0000 00B3 // USART1 initialization
; 0000 00B4 // USART1 disabled
; 0000 00B5 UCSR1B=(0<<RXCIE1) | (0<<TXCIE1) | (0<<UDRIE1) | (0<<RXEN1) | (0<<TXEN1) | (0<<UCSZ12) | (0<<RXB81) | (0<<TXB81);
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
; 0000 00B6 
; 0000 00B7 // Analog Comparator initialization
; 0000 00B8 // Analog Comparator: Off
; 0000 00B9 // The Analog Comparator's positive input is
; 0000 00BA // connected to the AIN0 pin
; 0000 00BB // The Analog Comparator's negative input is
; 0000 00BC // connected to the AIN1 pin
; 0000 00BD ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 00BE SFIOR=(0<<ACME);
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 00BF 
; 0000 00C0 // ADC initialization
; 0000 00C1 // ADC disabled
; 0000 00C2 ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADFR) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
; 0000 00C3 
; 0000 00C4 // SPI initialization
; 0000 00C5 // SPI disabled
; 0000 00C6 SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0000 00C7 
; 0000 00C8 // TWI initialization
; 0000 00C9 // TWI disabled
; 0000 00CA TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
; 0000 00CB 
; 0000 00CC // Graphic Display Controller initialization
; 0000 00CD // The PCD8544 connections are specified in the
; 0000 00CE // Project|Configure|C Compiler|Libraries|Graphic Display menu:
; 0000 00CF // SDIN - PORTG Bit 1
; 0000 00D0 // SCLK - PORTG Bit 2
; 0000 00D1 // D /C - PORTG Bit 0
; 0000 00D2 // /SCE - PORTG Bit 4
; 0000 00D3 // /RES - PORTG Bit 3
; 0000 00D4 
; 0000 00D5 // Specify the current font for displaying text
; 0000 00D6 glcd_init_data.font=font5x7;
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
; 0000 00D7 // No function is used for reading
; 0000 00D8 // image data from external memory
; 0000 00D9 glcd_init_data.readxmem=NULL;
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 00DA // No function is used for writing
; 0000 00DB // image data to external memory
; 0000 00DC glcd_init_data.writexmem=NULL;
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0000 00DD // Set the LCD temperature coefficient
; 0000 00DE glcd_init_data.temp_coef=1590; // range of value from 120 ---> 160
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
; 0000 00DF // Set the LCD bias
; 0000 00E0 glcd_init_data.bias=4; // range of value from 2 ---> 4
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 00E1 // Set the LCD contrast control voltage VLCD
; 0000 00E2 glcd_init_data.vlcd=55; // range of value from 35 --> 55
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0000 00E3 
; 0000 00E4 glcd_init(&glcd_init_data);
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0000 00E5 
; 0000 00E6 
; 0000 00E7 glcd_outtextxy(5, 5, "em duc dep trai");
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
; 0000 00E8 glcd_rectangle(5, 5, 25, 25);
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
; 0000 00E9 glcd_circle(25, 25, 10);
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
; 0000 00EA glcd_circle(42, 24, 20);
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
; 0000 00EB glcd_rectangle(3, 3, 78, 42);
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0000 00EC while (1)
;PCODE: $000000B8 VOL: 0
; 0000 00ED       {
; 0000 00EE       // Place your code here
; 0000 00EF 
; 0000 00F0       }
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
; 0000 00F1 }
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0

	.DSEG
_0x3:
	.BYTE 0x10

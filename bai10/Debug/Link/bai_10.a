;/*
; * bai_10.c
; *
; * Created: 24/10/27 2:23:21 PM
; * Author: ADMIN
; */
;
;#include <io.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include <alcd.h>
;#include <stdio.h>
;unsigned int gia_tri_adc;
;char buffer[10];
;#define ADC_VREF_TYPE 0x00
;unsigned int read_adc(unsigned char adc_input){
; 0000 000F unsigned int read_adc(unsigned char adc_input){

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0010     ADMUX = adc_input | ADC_VREF_TYPE;
;PCODE: $0000000F VOL: 0
;	adc_input -> Y+0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 0011     delay_us(10);
;PCODE: $00000013 VOL: 0
; 0000 0012     ADCSRA |= 0x40;
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0013     while((ADCSRA & 0x10)==0);
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 0014     ADCSRA |= 0x10;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 0015     return ADCW;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0016 }
;PCODE: $00000021 VOL: 0
;
;void main(void)
; 0000 0019 {
;PCODE: $00000022 VOL: 0
; 0000 001A     DDRD = 0x80;
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 001B     PORTD = 0x80;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 001C     lcd_init(16);
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 001D     ADMUX = ADC_VREF_TYPE;
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 001E     ADCSRA = 0x83;
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 001F 
; 0000 0020 while (1)
;PCODE: $0000002D VOL: 0
; 0000 0021     {
; 0000 0022     // Please write your application code here
; 0000 0023     gia_tri_adc = read_adc(0);
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0024     sprintf(buffer, "%d", gia_tri_adc);
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 0025     lcd_gotoxy(0,0);
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 0026     lcd_puts(buffer);
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0027     delay_ms(100);
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 0028     }
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 0029 }
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
